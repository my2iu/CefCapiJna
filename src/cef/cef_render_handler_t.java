package cef;
import cef.CefLibrary.HCURSOR;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\capi\cef_render_handler_capi.h:25</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_render_handler_t extends Structure {
	/** C type : cef_base_t */
	public cef_base_t base;
	/** C type : get_root_screen_rect_callback* */
	public cef_render_handler_t.get_root_screen_rect_callback get_root_screen_rect;
	/** C type : get_view_rect_callback* */
	public cef_render_handler_t.get_view_rect_callback get_view_rect;
	/** C type : get_screen_point_callback* */
	public cef_render_handler_t.get_screen_point_callback get_screen_point;
	/** C type : get_screen_info_callback* */
	public cef_render_handler_t.get_screen_info_callback get_screen_info;
	/** C type : on_popup_show_callback* */
	public cef_render_handler_t.on_popup_show_callback on_popup_show;
	/** C type : on_popup_size_callback* */
	public cef_render_handler_t.on_popup_size_callback on_popup_size;
	/** C type : on_paint_callback* */
	public cef_render_handler_t.on_paint_callback on_paint;
	/** C type : on_cursor_change_callback* */
	public cef_render_handler_t.on_cursor_change_callback on_cursor_change;
	/** C type : start_dragging_callback* */
	public cef_render_handler_t.start_dragging_callback start_dragging;
	/** C type : update_drag_cursor_callback* */
	public cef_render_handler_t.update_drag_cursor_callback update_drag_cursor;
	/** C type : on_scroll_offset_changed_callback* */
	public cef_render_handler_t.on_scroll_offset_changed_callback on_scroll_offset_changed;
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:14</i> */
	public interface get_root_screen_rect_callback extends Callback {
		int apply(cef_render_handler_t self, cef_browser_t browser, cef_rect_t rect);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:15</i> */
	public interface get_view_rect_callback extends Callback {
		int apply(cef_render_handler_t self, cef_browser_t browser, cef_rect_t rect);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:16</i> */
	public interface get_screen_point_callback extends Callback {
		int apply(cef_render_handler_t self, cef_browser_t browser, int viewX, int viewY, IntByReference screenX, IntByReference screenY);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:17</i> */
	public interface get_screen_info_callback extends Callback {
		int apply(cef_render_handler_t self, cef_browser_t browser, cef_screen_info_t screen_info);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:18</i> */
	public interface on_popup_show_callback extends Callback {
		void apply(cef_render_handler_t self, cef_browser_t browser, int show);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:19</i> */
	public interface on_popup_size_callback extends Callback {
		void apply(cef_render_handler_t self, cef_browser_t browser, cef_rect_t rect);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:20</i> */
	public interface on_paint_callback extends Callback {
		void apply(cef_render_handler_t self, cef_browser_t browser, int type, int dirtyRectsCount, cef_rect_t dirtyRects, Pointer buffer, int width, int height);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:21</i> */
	public interface on_cursor_change_callback extends Callback {
		void apply(cef_render_handler_t self, cef_browser_t browser, HCURSOR cursor, int type, cef_cursor_info_t custom_cursor_info);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:22</i> */
	public interface start_dragging_callback extends Callback {
		int apply(cef_render_handler_t self, cef_browser_t browser, cef_drag_data_t drag_data, int allowed_ops, int x, int y);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:23</i> */
	public interface update_drag_cursor_callback extends Callback {
		void apply(cef_render_handler_t self, cef_browser_t browser, int operation);
	};
	/** <i>native declaration : include\capi\cef_render_handler_capi.h:24</i> */
	public interface on_scroll_offset_changed_callback extends Callback {
		void apply(cef_render_handler_t self, cef_browser_t browser, double x, double y);
	};
	public cef_render_handler_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("base", "get_root_screen_rect", "get_view_rect", "get_screen_point", "get_screen_info", "on_popup_show", "on_popup_size", "on_paint", "on_cursor_change", "start_dragging", "update_drag_cursor", "on_scroll_offset_changed");
	}
	public cef_render_handler_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_render_handler_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_render_handler_t implements Structure.ByValue {
		
	};
}
