package cef;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\capi\cef_v8_capi.h:159</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_v8value_t extends Structure {
	/** C type : cef_base_t */
	public cef_base_t base;
	/** C type : is_valid_callback* */
	public cef.cef_download_item_t.is_valid_callback is_valid;
	/** C type : is_undefined_callback* */
	public cef_v8value_t.is_undefined_callback is_undefined;
	/** C type : is_null_callback* */
	public cef_v8value_t.is_null_callback is_null;
	/** C type : is_bool_callback* */
	public cef_v8value_t.is_bool_callback is_bool;
	/** C type : is_int_callback* */
	public cef_v8value_t.is_int_callback is_int;
	/** C type : is_uint_callback* */
	public cef_v8value_t.is_uint_callback is_uint;
	/** C type : is_double_callback* */
	public cef_v8value_t.is_double_callback is_double;
	/** C type : is_date_callback* */
	public cef_v8value_t.is_date_callback is_date;
	/** C type : is_string_callback* */
	public cef_v8value_t.is_string_callback is_string;
	/** C type : is_object_callback* */
	public cef_v8value_t.is_object_callback is_object;
	/** C type : is_array_callback* */
	public cef_v8value_t.is_array_callback is_array;
	/** C type : is_function_callback* */
	public cef_v8value_t.is_function_callback is_function;
	/** C type : is_same_callback* */
	public cef_v8value_t.is_same_callback is_same;
	/** C type : get_bool_value_callback* */
	public cef_v8value_t.get_bool_value_callback get_bool_value;
	/** C type : get_int_value_callback* */
	public cef_v8value_t.get_int_value_callback get_int_value;
	/** C type : get_uint_value_callback* */
	public cef_v8value_t.get_uint_value_callback get_uint_value;
	/** C type : get_double_value_callback* */
	public cef_v8value_t.get_double_value_callback get_double_value;
	/** C type : is_user_created_callback* */
	public cef_v8value_t.is_user_created_callback is_user_created;
	/** C type : has_exception_callback* */
	public cef_v8value_t.has_exception_callback has_exception;
	/** C type : get_exception_callback* */
	public cef_v8value_t.get_exception_callback get_exception;
	/** C type : clear_exception_callback* */
	public cef_v8value_t.clear_exception_callback clear_exception;
	/** C type : will_rethrow_exceptions_callback* */
	public cef_v8value_t.will_rethrow_exceptions_callback will_rethrow_exceptions;
	/** C type : set_rethrow_exceptions_callback* */
	public cef_v8value_t.set_rethrow_exceptions_callback set_rethrow_exceptions;
	/** C type : has_value_bykey_callback* */
	public cef_v8value_t.has_value_bykey_callback has_value_bykey;
	/** C type : has_value_byindex_callback* */
	public cef_v8value_t.has_value_byindex_callback has_value_byindex;
	/** C type : delete_value_bykey_callback* */
	public cef_v8value_t.delete_value_bykey_callback delete_value_bykey;
	/** C type : delete_value_byindex_callback* */
	public cef_v8value_t.delete_value_byindex_callback delete_value_byindex;
	/** C type : get_value_bykey_callback* */
	public cef_v8value_t.get_value_bykey_callback get_value_bykey;
	/** C type : get_value_byindex_callback* */
	public cef_v8value_t.get_value_byindex_callback get_value_byindex;
	/** C type : set_value_bykey_callback* */
	public cef_v8value_t.set_value_bykey_callback set_value_bykey;
	/** C type : set_value_byindex_callback* */
	public cef_v8value_t.set_value_byindex_callback set_value_byindex;
	/** C type : set_value_byaccessor_callback* */
	public cef_v8value_t.set_value_byaccessor_callback set_value_byaccessor;
	/** C type : get_keys_callback* */
	public cef_v8value_t.get_keys_callback get_keys;
	/** C type : set_user_data_callback* */
	public cef_v8value_t.set_user_data_callback set_user_data;
	/** C type : get_user_data_callback* */
	public cef_v8value_t.get_user_data_callback get_user_data;
	/** C type : get_externally_allocated_memory_callback* */
	public cef_v8value_t.get_externally_allocated_memory_callback get_externally_allocated_memory;
	/** C type : adjust_externally_allocated_memory_callback* */
	public cef_v8value_t.adjust_externally_allocated_memory_callback adjust_externally_allocated_memory;
	/** C type : get_array_length_callback* */
	public cef_v8value_t.get_array_length_callback get_array_length;
	/** C type : get_function_handler_callback* */
	public cef_v8value_t.get_function_handler_callback get_function_handler;
	/** C type : execute_function_callback* */
	public cef_v8value_t.execute_function_callback execute_function;
	/** C type : execute_function_with_context_callback* */
	public cef_v8value_t.execute_function_with_context_callback execute_function_with_context;
	/** <i>native declaration : include\capi\cef_v8_capi.h:115</i> */
	public interface is_valid_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:116</i> */
	public interface is_undefined_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:117</i> */
	public interface is_null_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:118</i> */
	public interface is_bool_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:119</i> */
	public interface is_int_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:120</i> */
	public interface is_uint_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:121</i> */
	public interface is_double_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:122</i> */
	public interface is_date_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:123</i> */
	public interface is_string_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:124</i> */
	public interface is_object_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:125</i> */
	public interface is_array_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:126</i> */
	public interface is_function_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:127</i> */
	public interface is_same_callback extends Callback {
		int apply(cef_v8value_t self, cef_v8value_t that);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:128</i> */
	public interface get_bool_value_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:129</i> */
	public interface get_int_value_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:130</i> */
	public interface get_uint_value_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:131</i> */
	public interface get_double_value_callback extends Callback {
		double apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:132</i> */
	public interface cef_time_t_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:133</i> */
	public interface cef_string_userfree_t_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:134</i> */
	public interface is_user_created_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:135</i> */
	public interface has_exception_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:136</i> */
	public interface get_exception_callback extends Callback {
		cef_v8exception_t apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:137</i> */
	public interface clear_exception_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:138</i> */
	public interface will_rethrow_exceptions_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:139</i> */
	public interface set_rethrow_exceptions_callback extends Callback {
		int apply(cef_v8value_t self, int rethrow);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:140</i> */
	public interface has_value_bykey_callback extends Callback {
		int apply(cef_v8value_t self, cef_string_utf16_t key);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:141</i> */
	public interface has_value_byindex_callback extends Callback {
		int apply(cef_v8value_t self, int index);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:142</i> */
	public interface delete_value_bykey_callback extends Callback {
		int apply(cef_v8value_t self, cef_string_utf16_t key);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:143</i> */
	public interface delete_value_byindex_callback extends Callback {
		int apply(cef_v8value_t self, int index);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:144</i> */
	public interface get_value_bykey_callback extends Callback {
		cef_v8value_t apply(cef_v8value_t self, cef_string_utf16_t key);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:145</i> */
	public interface get_value_byindex_callback extends Callback {
		cef_v8value_t apply(cef_v8value_t self, int index);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:146</i> */
	public interface set_value_bykey_callback extends Callback {
		int apply(cef_v8value_t self, cef_string_utf16_t key, cef_v8value_t value, int attribute);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:147</i> */
	public interface set_value_byindex_callback extends Callback {
		int apply(cef_v8value_t self, int index, cef_v8value_t value);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:148</i> */
	public interface set_value_byaccessor_callback extends Callback {
		int apply(cef_v8value_t self, cef_string_utf16_t key, int settings, int attribute);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:149</i> */
	public interface get_keys_callback extends Callback {
		int apply(cef_v8value_t self, Pointer keys);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:150</i> */
	public interface set_user_data_callback extends Callback {
		int apply(cef_v8value_t self, cef_base_t user_data);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:151</i> */
	public interface get_user_data_callback extends Callback {
		cef_base_t apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:152</i> */
	public interface get_externally_allocated_memory_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:153</i> */
	public interface adjust_externally_allocated_memory_callback extends Callback {
		int apply(cef_v8value_t self, int change_in_bytes);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:154</i> */
	public interface get_array_length_callback extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:155</i> */
	public interface cef_string_userfree_t_callback2 extends Callback {
		int apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:156</i> */
	public interface get_function_handler_callback extends Callback {
		cef_v8handler_t apply(cef_v8value_t self);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:157</i> */
	public interface execute_function_callback extends Callback {
		cef_v8value_t apply(cef_v8value_t self, cef_v8value_t object, int argumentsCount, PointerByReference arguments);
	};
	/** <i>native declaration : include\capi\cef_v8_capi.h:158</i> */
	public interface execute_function_with_context_callback extends Callback {
		cef_v8value_t apply(cef_v8value_t self, cef_v8context_t context, cef_v8value_t object, int argumentsCount, PointerByReference arguments);
	};
	public cef_v8value_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("base", "is_valid", "is_undefined", "is_null", "is_bool", "is_int", "is_uint", "is_double", "is_date", "is_string", "is_object", "is_array", "is_function", "is_same", "get_bool_value", "get_int_value", "get_uint_value", "get_double_value", "is_user_created", "has_exception", "get_exception", "clear_exception", "will_rethrow_exceptions", "set_rethrow_exceptions", "has_value_bykey", "has_value_byindex", "delete_value_bykey", "delete_value_byindex", "get_value_bykey", "get_value_byindex", "set_value_bykey", "set_value_byindex", "set_value_byaccessor", "get_keys", "set_user_data", "get_user_data", "get_externally_allocated_memory", "adjust_externally_allocated_memory", "get_array_length", "get_function_handler", "execute_function", "execute_function_with_context");
	}
	public cef_v8value_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_v8value_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_v8value_t implements Structure.ByValue {
		
	};
}
