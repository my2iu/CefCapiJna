package cef;
import cef.CefLibrary._cef_frame_t;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\capi\cef_load_handler_capi.h:11</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_load_handler_t extends Structure {
	/** C type : cef_base_t */
	public cef_base_t base;
	/** C type : on_loading_state_change_callback* */
	public cef_load_handler_t.on_loading_state_change_callback on_loading_state_change;
	/** C type : on_load_start_callback* */
	public cef_load_handler_t.on_load_start_callback on_load_start;
	/** C type : on_load_end_callback* */
	public cef_load_handler_t.on_load_end_callback on_load_end;
	/** C type : on_load_error_callback* */
	public cef_load_handler_t.on_load_error_callback on_load_error;
	/** <i>native declaration : include\capi\cef_load_handler_capi.h:7</i> */
	public interface on_loading_state_change_callback extends Callback {
		void apply(cef_load_handler_t self, cef_browser_t browser, int isLoading, int canGoBack, int canGoForward);
	};
	/** <i>native declaration : include\capi\cef_load_handler_capi.h:8</i> */
	public interface on_load_start_callback extends Callback {
		void apply(cef_load_handler_t self, cef_browser_t browser, _cef_frame_t frame);
	};
	/** <i>native declaration : include\capi\cef_load_handler_capi.h:9</i> */
	public interface on_load_end_callback extends Callback {
		void apply(cef_load_handler_t self, cef_browser_t browser, _cef_frame_t frame, int httpStatusCode);
	};
	/** <i>native declaration : include\capi\cef_load_handler_capi.h:10</i> */
	public interface on_load_error_callback extends Callback {
		void apply(cef_load_handler_t self, cef_browser_t browser, _cef_frame_t frame, int errorCode, cef_string_utf16_t errorText, cef_string_utf16_t failedUrl);
	};
	public cef_load_handler_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("base", "on_loading_state_change", "on_load_start", "on_load_end", "on_load_error");
	}
	/**
	 * @param base C type : cef_base_t<br>
	 * @param on_loading_state_change C type : on_loading_state_change_callback*<br>
	 * @param on_load_start C type : on_load_start_callback*<br>
	 * @param on_load_end C type : on_load_end_callback*<br>
	 * @param on_load_error C type : on_load_error_callback*
	 */
	public cef_load_handler_t(cef_base_t base, cef_load_handler_t.on_loading_state_change_callback on_loading_state_change, cef_load_handler_t.on_load_start_callback on_load_start, cef_load_handler_t.on_load_end_callback on_load_end, cef_load_handler_t.on_load_error_callback on_load_error) {
		super();
		this.base = base;
		this.on_loading_state_change = on_loading_state_change;
		this.on_load_start = on_load_start;
		this.on_load_end = on_load_end;
		this.on_load_error = on_load_error;
	}
	public cef_load_handler_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_load_handler_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_load_handler_t implements Structure.ByValue {
		
	};
}
