package cef;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\internal\cef_types.h:708</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_cursor_info_t extends Structure {
	/** C type : cef_point_t */
	public cef_point_t hotspot;
	public float image_scale_factor;
	/** C type : void* */
	public Pointer buffer;
	/** C type : cef_size_t */
	public cef_size_t size;
	public cef_cursor_info_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("hotspot", "image_scale_factor", "buffer", "size");
	}
	/**
	 * @param hotspot C type : cef_point_t<br>
	 * @param buffer C type : void*<br>
	 * @param size C type : cef_size_t
	 */
	public cef_cursor_info_t(cef_point_t hotspot, float image_scale_factor, Pointer buffer, cef_size_t size) {
		super();
		this.hotspot = hotspot;
		this.image_scale_factor = image_scale_factor;
		this.buffer = buffer;
		this.size = size;
	}
	public cef_cursor_info_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_cursor_info_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_cursor_info_t implements Structure.ByValue {
		
	};
}
