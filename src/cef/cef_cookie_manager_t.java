package cef;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\capi\cef_cookie_capi.h:20</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_cookie_manager_t extends Structure {
	/** C type : cef_base_t */
	public cef_base_t base;
	/** C type : set_supported_schemes_callback* */
	public cef_cookie_manager_t.set_supported_schemes_callback set_supported_schemes;
	/** C type : visit_all_cookies_callback* */
	public cef_cookie_manager_t.visit_all_cookies_callback visit_all_cookies;
	/** C type : visit_url_cookies_callback* */
	public cef_cookie_manager_t.visit_url_cookies_callback visit_url_cookies;
	/** C type : set_cookie_callback* */
	public cef_cookie_manager_t.set_cookie_callback set_cookie;
	/** C type : delete_cookies_callback* */
	public cef_cookie_manager_t.delete_cookies_callback delete_cookies;
	/** C type : set_storage_path_callback* */
	public cef_cookie_manager_t.set_storage_path_callback set_storage_path;
	/** C type : flush_store_callback* */
	public cef_cookie_manager_t.flush_store_callback flush_store;
	/** <i>native declaration : include\capi\cef_cookie_capi.h:13</i> */
	public interface set_supported_schemes_callback extends Callback {
		void apply(cef_cookie_manager_t self, Pointer schemes, cef_completion_callback_t callback);
	};
	/** <i>native declaration : include\capi\cef_cookie_capi.h:14</i> */
	public interface visit_all_cookies_callback extends Callback {
		int apply(cef_cookie_manager_t self, cef_cookie_visitor_t visitor);
	};
	/** <i>native declaration : include\capi\cef_cookie_capi.h:15</i> */
	public interface visit_url_cookies_callback extends Callback {
		int apply(cef_cookie_manager_t self, cef_string_utf16_t url, int includeHttpOnly, cef_cookie_visitor_t visitor);
	};
	/** <i>native declaration : include\capi\cef_cookie_capi.h:16</i> */
	public interface set_cookie_callback extends Callback {
		int apply(cef_cookie_manager_t self, cef_string_utf16_t url, cef_cookie_t cookie, cef_set_cookie_callback_t callback);
	};
	/** <i>native declaration : include\capi\cef_cookie_capi.h:17</i> */
	public interface delete_cookies_callback extends Callback {
		int apply(cef_cookie_manager_t self, cef_string_utf16_t url, cef_string_utf16_t cookie_name, cef_delete_cookies_callback_t callback);
	};
	/** <i>native declaration : include\capi\cef_cookie_capi.h:18</i> */
	public interface set_storage_path_callback extends Callback {
		int apply(cef_cookie_manager_t self, cef_string_utf16_t path, int persist_session_cookies, cef_completion_callback_t callback);
	};
	/** <i>native declaration : include\capi\cef_cookie_capi.h:19</i> */
	public interface flush_store_callback extends Callback {
		int apply(cef_cookie_manager_t self, cef_completion_callback_t callback);
	};
	public cef_cookie_manager_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("base", "set_supported_schemes", "visit_all_cookies", "visit_url_cookies", "set_cookie", "delete_cookies", "set_storage_path", "flush_store");
	}
	/**
	 * @param base C type : cef_base_t<br>
	 * @param set_supported_schemes C type : set_supported_schemes_callback*<br>
	 * @param visit_all_cookies C type : visit_all_cookies_callback*<br>
	 * @param visit_url_cookies C type : visit_url_cookies_callback*<br>
	 * @param set_cookie C type : set_cookie_callback*<br>
	 * @param delete_cookies C type : delete_cookies_callback*<br>
	 * @param set_storage_path C type : set_storage_path_callback*<br>
	 * @param flush_store C type : flush_store_callback*
	 */
	public cef_cookie_manager_t(cef_base_t base, cef_cookie_manager_t.set_supported_schemes_callback set_supported_schemes, cef_cookie_manager_t.visit_all_cookies_callback visit_all_cookies, cef_cookie_manager_t.visit_url_cookies_callback visit_url_cookies, cef_cookie_manager_t.set_cookie_callback set_cookie, cef_cookie_manager_t.delete_cookies_callback delete_cookies, cef_cookie_manager_t.set_storage_path_callback set_storage_path, cef_cookie_manager_t.flush_store_callback flush_store) {
		super();
		this.base = base;
		this.set_supported_schemes = set_supported_schemes;
		this.visit_all_cookies = visit_all_cookies;
		this.visit_url_cookies = visit_url_cookies;
		this.set_cookie = set_cookie;
		this.delete_cookies = delete_cookies;
		this.set_storage_path = set_storage_path;
		this.flush_store = flush_store;
	}
	public cef_cookie_manager_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_cookie_manager_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_cookie_manager_t implements Structure.ByValue {
		
	};
}
