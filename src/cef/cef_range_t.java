package cef;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\internal\cef_types.h:325</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_range_t extends Structure {
	public int from;
	public int to;
	public cef_range_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("from", "to");
	}
	public cef_range_t(int from, int to) {
		super();
		this.from = from;
		this.to = to;
	}
	public cef_range_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_range_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_range_t implements Structure.ByValue {
		
	};
}
