package cef;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\internal\cef_types.h:335</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_draggable_region_t extends Structure {
	/** C type : cef_rect_t */
	public cef_rect_t bounds;
	public int draggable;
	public cef_draggable_region_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("bounds", "draggable");
	}
	/** @param bounds C type : cef_rect_t */
	public cef_draggable_region_t(cef_rect_t bounds, int draggable) {
		super();
		this.bounds = bounds;
		this.draggable = draggable;
	}
	public cef_draggable_region_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_draggable_region_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_draggable_region_t implements Structure.ByValue {
		
	};
}
