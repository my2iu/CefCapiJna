package cef;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\internal\cef_types.h:829</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_box_layout_settings_t extends Structure {
	public int horizontal;
	public int inside_border_horizontal_spacing;
	public int inside_border_vertical_spacing;
	/** C type : cef_insets_t */
	public cef_insets_t inside_border_insets;
	public int between_child_spacing;
	/**
	 * @see cef_main_axis_alignment_t<br>
	 * C type : cef_main_axis_alignment_t
	 */
	public int main_axis_alignment;
	/**
	 * @see cef_cross_axis_alignment_t<br>
	 * C type : cef_cross_axis_alignment_t
	 */
	public int cross_axis_alignment;
	public int minimum_cross_axis_size;
	public int default_flex;
	public cef_box_layout_settings_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("horizontal", "inside_border_horizontal_spacing", "inside_border_vertical_spacing", "inside_border_insets", "between_child_spacing", "main_axis_alignment", "cross_axis_alignment", "minimum_cross_axis_size", "default_flex");
	}
	/**
	 * @param inside_border_insets C type : cef_insets_t<br>
	 * @param main_axis_alignment @see cef_main_axis_alignment_t<br>
	 * C type : cef_main_axis_alignment_t<br>
	 * @param cross_axis_alignment @see cef_cross_axis_alignment_t<br>
	 * C type : cef_cross_axis_alignment_t
	 */
	public cef_box_layout_settings_t(int horizontal, int inside_border_horizontal_spacing, int inside_border_vertical_spacing, cef_insets_t inside_border_insets, int between_child_spacing, int main_axis_alignment, int cross_axis_alignment, int minimum_cross_axis_size, int default_flex) {
		super();
		this.horizontal = horizontal;
		this.inside_border_horizontal_spacing = inside_border_horizontal_spacing;
		this.inside_border_vertical_spacing = inside_border_vertical_spacing;
		this.inside_border_insets = inside_border_insets;
		this.between_child_spacing = between_child_spacing;
		this.main_axis_alignment = main_axis_alignment;
		this.cross_axis_alignment = cross_axis_alignment;
		this.minimum_cross_axis_size = minimum_cross_axis_size;
		this.default_flex = default_flex;
	}
	public cef_box_layout_settings_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_box_layout_settings_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_box_layout_settings_t implements Structure.ByValue {
		
	};
}
