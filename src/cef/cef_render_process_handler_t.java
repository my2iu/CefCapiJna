package cef;
import cef.CefLibrary._cef_frame_t;
import cef.CefLibrary._cef_list_value_t;
import cef.CefLibrary._cef_process_message_t;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\capi\cef_render_process_handler_capi.h:25</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_render_process_handler_t extends Structure {
	/** C type : cef_base_t */
	public cef_base_t base;
	/** C type : on_render_thread_created_callback* */
	public cef_render_process_handler_t.on_render_thread_created_callback on_render_thread_created;
	/** C type : on_web_kit_initialized_callback* */
	public cef_render_process_handler_t.on_web_kit_initialized_callback on_web_kit_initialized;
	/** C type : on_browser_created_callback* */
	public cef_render_process_handler_t.on_browser_created_callback on_browser_created;
	/** C type : on_browser_destroyed_callback* */
	public cef_render_process_handler_t.on_browser_destroyed_callback on_browser_destroyed;
	/** C type : get_load_handler_callback* */
	public cef.cef_client_t.get_load_handler_callback get_load_handler;
	/** C type : on_before_navigation_callback* */
	public cef_render_process_handler_t.on_before_navigation_callback on_before_navigation;
	/** C type : on_context_created_callback* */
	public cef_render_process_handler_t.on_context_created_callback on_context_created;
	/** C type : on_context_released_callback* */
	public cef_render_process_handler_t.on_context_released_callback on_context_released;
	/** C type : on_uncaught_exception_callback* */
	public cef_render_process_handler_t.on_uncaught_exception_callback on_uncaught_exception;
	/** C type : on_focused_node_changed_callback* */
	public cef_render_process_handler_t.on_focused_node_changed_callback on_focused_node_changed;
	/** C type : on_process_message_received_callback* */
	public cef.cef_client_t.on_process_message_received_callback on_process_message_received;
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:14</i> */
	public interface on_render_thread_created_callback extends Callback {
		void apply(cef_render_process_handler_t self, _cef_list_value_t extra_info);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:15</i> */
	public interface on_web_kit_initialized_callback extends Callback {
		void apply(cef_render_process_handler_t self);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:16</i> */
	public interface on_browser_created_callback extends Callback {
		void apply(cef_render_process_handler_t self, cef_browser_t browser);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:17</i> */
	public interface on_browser_destroyed_callback extends Callback {
		void apply(cef_render_process_handler_t self, cef_browser_t browser);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:18</i> */
	public interface get_load_handler_callback extends Callback {
		cef_load_handler_t apply(cef_render_process_handler_t self);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:19</i> */
	public interface on_before_navigation_callback extends Callback {
		int apply(cef_render_process_handler_t self, cef_browser_t browser, _cef_frame_t frame, cef_request_t request, int navigation_type, int is_redirect);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:20</i> */
	public interface on_context_created_callback extends Callback {
		void apply(cef_render_process_handler_t self, cef_browser_t browser, _cef_frame_t frame, cef_v8context_t context);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:21</i> */
	public interface on_context_released_callback extends Callback {
		void apply(cef_render_process_handler_t self, cef_browser_t browser, _cef_frame_t frame, cef_v8context_t context);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:22</i> */
	public interface on_uncaught_exception_callback extends Callback {
		void apply(cef_render_process_handler_t self, cef_browser_t browser, _cef_frame_t frame, cef_v8context_t context, cef_v8exception_t exception, cef_v8stack_trace_t stackTrace);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:23</i> */
	public interface on_focused_node_changed_callback extends Callback {
		void apply(cef_render_process_handler_t self, cef_browser_t browser, _cef_frame_t frame, cef_domnode_t node);
	};
	/** <i>native declaration : include\capi\cef_render_process_handler_capi.h:24</i> */
	public interface on_process_message_received_callback extends Callback {
		int apply(cef_render_process_handler_t self, cef_browser_t browser, int source_process, _cef_process_message_t message);
	};
	public cef_render_process_handler_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("base", "on_render_thread_created", "on_web_kit_initialized", "on_browser_created", "on_browser_destroyed", "get_load_handler", "on_before_navigation", "on_context_created", "on_context_released", "on_uncaught_exception", "on_focused_node_changed", "on_process_message_received");
	}
	public cef_render_process_handler_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_render_process_handler_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_render_process_handler_t implements Structure.ByValue {
		
	};
}
