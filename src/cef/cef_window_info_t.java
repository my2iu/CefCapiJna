package cef;
import cef.CefLibrary.HMENU;
import cef.CefLibrary.HWND;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\internal\cef_types_win.h:17</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_window_info_t extends Structure {
	public int ex_style;
	/** C type : cef_string_t */
	public cef_string_utf16_t window_name;
	public int style;
	public int x;
	public int y;
	public int width;
	public int height;
	/** C type : HWND */
	public HWND parent_window;
	/** C type : HMENU */
	public HMENU menu;
	public int windowless_rendering_enabled;
	public int transparent_painting_enabled;
	/** C type : HWND */
	public HWND window;
	public cef_window_info_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("ex_style", "window_name", "style", "x", "y", "width", "height", "parent_window", "menu", "windowless_rendering_enabled", "transparent_painting_enabled", "window");
	}
	public cef_window_info_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_window_info_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_window_info_t implements Structure.ByValue {
		
	};
}
