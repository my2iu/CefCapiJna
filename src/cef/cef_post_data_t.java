package cef;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\capi\cef_request_capi.h:71</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_post_data_t extends Structure {
	/** C type : cef_base_t */
	public cef_base_t base;
	/** C type : is_read_only_callback* */
	public cef.cef_response_t.is_read_only_callback is_read_only;
	/** C type : has_excluded_elements_callback* */
	public cef_post_data_t.has_excluded_elements_callback has_excluded_elements;
	/** C type : get_element_count_callback* */
	public cef_post_data_t.get_element_count_callback get_element_count;
	/** C type : get_elements_callback* */
	public cef_post_data_t.get_elements_callback get_elements;
	/** C type : remove_element_callback* */
	public cef_post_data_t.remove_element_callback remove_element;
	/** C type : add_element_callback* */
	public cef_post_data_t.add_element_callback add_element;
	/** C type : remove_elements_callback* */
	public cef_post_data_t.remove_elements_callback remove_elements;
	/** <i>native declaration : include\capi\cef_request_capi.h:64</i> */
	public interface is_read_only_callback extends Callback {
		int apply(cef_post_data_t self);
	};
	/** <i>native declaration : include\capi\cef_request_capi.h:65</i> */
	public interface has_excluded_elements_callback extends Callback {
		int apply(cef_post_data_t self);
	};
	/** <i>native declaration : include\capi\cef_request_capi.h:66</i> */
	public interface get_element_count_callback extends Callback {
		int apply(cef_post_data_t self);
	};
	/** <i>native declaration : include\capi\cef_request_capi.h:67</i> */
	public interface get_elements_callback extends Callback {
		void apply(cef_post_data_t self, IntByReference elementsCount, PointerByReference elements);
	};
	/** <i>native declaration : include\capi\cef_request_capi.h:68</i> */
	public interface remove_element_callback extends Callback {
		int apply(cef_post_data_t self, cef_post_data_element_t element);
	};
	/** <i>native declaration : include\capi\cef_request_capi.h:69</i> */
	public interface add_element_callback extends Callback {
		int apply(cef_post_data_t self, cef_post_data_element_t element);
	};
	/** <i>native declaration : include\capi\cef_request_capi.h:70</i> */
	public interface remove_elements_callback extends Callback {
		void apply(cef_post_data_t self);
	};
	public cef_post_data_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("base", "is_read_only", "has_excluded_elements", "get_element_count", "get_elements", "remove_element", "add_element", "remove_elements");
	}
	/**
	 * @param base C type : cef_base_t<br>
	 * @param is_read_only C type : is_read_only_callback*<br>
	 * @param has_excluded_elements C type : has_excluded_elements_callback*<br>
	 * @param get_element_count C type : get_element_count_callback*<br>
	 * @param get_elements C type : get_elements_callback*<br>
	 * @param remove_element C type : remove_element_callback*<br>
	 * @param add_element C type : add_element_callback*<br>
	 * @param remove_elements C type : remove_elements_callback*
	 */
	public cef_post_data_t(cef_base_t base, cef.cef_response_t.is_read_only_callback is_read_only, cef_post_data_t.has_excluded_elements_callback has_excluded_elements, cef_post_data_t.get_element_count_callback get_element_count, cef_post_data_t.get_elements_callback get_elements, cef_post_data_t.remove_element_callback remove_element, cef_post_data_t.add_element_callback add_element, cef_post_data_t.remove_elements_callback remove_elements) {
		super();
		this.base = base;
		this.is_read_only = is_read_only;
		this.has_excluded_elements = has_excluded_elements;
		this.get_element_count = get_element_count;
		this.get_elements = get_elements;
		this.remove_element = remove_element;
		this.add_element = add_element;
		this.remove_elements = remove_elements;
	}
	public cef_post_data_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_post_data_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_post_data_t implements Structure.ByValue {
		
	};
}
