package cef;
import cef.CefLibrary.MSG;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\capi\cef_browser_capi.h:170</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class cef_browser_host_t extends Structure {
	/** C type : cef_base_t */
	public cef_base_t base;
	/** C type : get_browser_callback* */
	public cef.cef_v8context_t.get_browser_callback get_browser;
	/** C type : close_browser_callback* */
	public cef_browser_host_t.close_browser_callback close_browser;
	/** C type : try_close_browser_callback* */
	public cef_browser_host_t.try_close_browser_callback try_close_browser;
	/** C type : set_focus_callback* */
	public cef_browser_host_t.set_focus_callback set_focus;
	/** C type : has_view_callback* */
	public cef_browser_host_t.has_view_callback has_view;
	/** C type : get_client_callback* */
	public cef.cef_urlrequest_t.get_client_callback get_client;
	/** C type : get_request_context_callback* */
	public cef_browser_host_t.get_request_context_callback get_request_context;
	/** C type : get_zoom_level_callback* */
	public cef_browser_host_t.get_zoom_level_callback get_zoom_level;
	/** C type : set_zoom_level_callback* */
	public cef_browser_host_t.set_zoom_level_callback set_zoom_level;
	/** C type : run_file_dialog_callback* */
	public cef_browser_host_t.run_file_dialog_callback run_file_dialog;
	/** C type : start_download_callback* */
	public cef_browser_host_t.start_download_callback start_download;
	/** C type : download_image_callback* */
	public cef_browser_host_t.download_image_callback download_image;
	/** C type : print_callback* */
	public cef_browser_host_t.print_callback print;
	/** C type : print_to_pdf_callback* */
	public cef_browser_host_t.print_to_pdf_callback print_to_pdf;
	/** C type : find_callback* */
	public cef_browser_host_t.find_callback find;
	/** C type : stop_finding_callback* */
	public cef_browser_host_t.stop_finding_callback stop_finding;
	/** C type : show_dev_tools_callback* */
	public cef_browser_host_t.show_dev_tools_callback show_dev_tools;
	/** C type : close_dev_tools_callback* */
	public cef_browser_host_t.close_dev_tools_callback close_dev_tools;
	/** C type : has_dev_tools_callback* */
	public cef_browser_host_t.has_dev_tools_callback has_dev_tools;
	/** C type : get_navigation_entries_callback* */
	public cef_browser_host_t.get_navigation_entries_callback get_navigation_entries;
	/** C type : set_mouse_cursor_change_disabled_callback* */
	public cef_browser_host_t.set_mouse_cursor_change_disabled_callback set_mouse_cursor_change_disabled;
	/** C type : is_mouse_cursor_change_disabled_callback* */
	public cef_browser_host_t.is_mouse_cursor_change_disabled_callback is_mouse_cursor_change_disabled;
	/** C type : replace_misspelling_callback* */
	public cef_browser_host_t.replace_misspelling_callback replace_misspelling;
	/** C type : add_word_to_dictionary_callback* */
	public cef_browser_host_t.add_word_to_dictionary_callback add_word_to_dictionary;
	/** C type : is_window_rendering_disabled_callback* */
	public cef_browser_host_t.is_window_rendering_disabled_callback is_window_rendering_disabled;
	/** C type : was_resized_callback* */
	public cef_browser_host_t.was_resized_callback was_resized;
	/** C type : was_hidden_callback* */
	public cef_browser_host_t.was_hidden_callback was_hidden;
	/** C type : notify_screen_info_changed_callback* */
	public cef_browser_host_t.notify_screen_info_changed_callback notify_screen_info_changed;
	/** C type : invalidate_callback* */
	public cef_browser_host_t.invalidate_callback invalidate;
	/** C type : send_key_event_callback* */
	public cef_browser_host_t.send_key_event_callback send_key_event;
	/** C type : send_mouse_click_event_callback* */
	public cef_browser_host_t.send_mouse_click_event_callback send_mouse_click_event;
	/** C type : send_mouse_move_event_callback* */
	public cef_browser_host_t.send_mouse_move_event_callback send_mouse_move_event;
	/** C type : send_mouse_wheel_event_callback* */
	public cef_browser_host_t.send_mouse_wheel_event_callback send_mouse_wheel_event;
	/** C type : send_focus_event_callback* */
	public cef_browser_host_t.send_focus_event_callback send_focus_event;
	/** C type : send_capture_lost_event_callback* */
	public cef_browser_host_t.send_capture_lost_event_callback send_capture_lost_event;
	/** C type : notify_move_or_resize_started_callback* */
	public cef_browser_host_t.notify_move_or_resize_started_callback notify_move_or_resize_started;
	/** C type : get_windowless_frame_rate_callback* */
	public cef_browser_host_t.get_windowless_frame_rate_callback get_windowless_frame_rate;
	/** C type : set_windowless_frame_rate_callback* */
	public cef_browser_host_t.set_windowless_frame_rate_callback set_windowless_frame_rate;
	/** C type : get_nstext_input_context_callback* */
	public cef_browser_host_t.get_nstext_input_context_callback get_nstext_input_context;
	/** C type : handle_key_event_before_text_input_client_callback* */
	public cef_browser_host_t.handle_key_event_before_text_input_client_callback handle_key_event_before_text_input_client;
	/** C type : handle_key_event_after_text_input_client_callback* */
	public cef_browser_host_t.handle_key_event_after_text_input_client_callback handle_key_event_after_text_input_client;
	/** C type : drag_target_drag_enter_callback* */
	public cef_browser_host_t.drag_target_drag_enter_callback drag_target_drag_enter;
	/** C type : drag_target_drag_over_callback* */
	public cef_browser_host_t.drag_target_drag_over_callback drag_target_drag_over;
	/** C type : drag_target_drag_leave_callback* */
	public cef_browser_host_t.drag_target_drag_leave_callback drag_target_drag_leave;
	/** C type : drag_target_drop_callback* */
	public cef_browser_host_t.drag_target_drop_callback drag_target_drop;
	/** C type : drag_source_ended_at_callback* */
	public cef_browser_host_t.drag_source_ended_at_callback drag_source_ended_at;
	/** C type : drag_source_system_drag_ended_callback* */
	public cef_browser_host_t.drag_source_system_drag_ended_callback drag_source_system_drag_ended;
	/** <i>native declaration : include\capi\cef_browser_capi.h:121</i> */
	public interface get_browser_callback extends Callback {
		cef_browser_t apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:122</i> */
	public interface close_browser_callback extends Callback {
		void apply(cef_browser_host_t self, int force_close);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:123</i> */
	public interface try_close_browser_callback extends Callback {
		int apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:124</i> */
	public interface set_focus_callback extends Callback {
		void apply(cef_browser_host_t self, int focus);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:125</i> */
	public interface HWND_callback extends Callback {
		int apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:126</i> */
	public interface HWND_callback2 extends Callback {
		int apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:127</i> */
	public interface has_view_callback extends Callback {
		int apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:128</i> */
	public interface get_client_callback extends Callback {
		cef_client_t apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:129</i> */
	public interface get_request_context_callback extends Callback {
		cef_request_context_t apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:130</i> */
	public interface get_zoom_level_callback extends Callback {
		double apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:131</i> */
	public interface set_zoom_level_callback extends Callback {
		void apply(cef_browser_host_t self, double zoomLevel);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:132</i> */
	public interface run_file_dialog_callback extends Callback {
		void apply(cef_browser_host_t self, int mode, cef_string_utf16_t title, cef_string_utf16_t default_file_path, Pointer accept_filters, int selected_accept_filter, cef_run_file_dialog_callback_t callback);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:133</i> */
	public interface start_download_callback extends Callback {
		void apply(cef_browser_host_t self, cef_string_utf16_t url);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:134</i> */
	public interface download_image_callback extends Callback {
		void apply(cef_browser_host_t self, cef_string_utf16_t image_url, int is_favicon, int max_image_size, int bypass_cache, cef_download_image_callback_t callback);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:135</i> */
	public interface print_callback extends Callback {
		void apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:136</i> */
	public interface print_to_pdf_callback extends Callback {
		void apply(cef_browser_host_t self, cef_string_utf16_t path, cef_pdf_print_settings_t settings, cef_pdf_print_callback_t callback);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:137</i> */
	public interface find_callback extends Callback {
		void apply(cef_browser_host_t self, int identifier, cef_string_utf16_t searchText, int forward, int matchCase, int findNext);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:138</i> */
	public interface stop_finding_callback extends Callback {
		void apply(cef_browser_host_t self, int clearSelection);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:139</i> */
	public interface show_dev_tools_callback extends Callback {
		void apply(cef_browser_host_t self, cef_window_info_t windowInfo, cef_client_t client, cef_browser_settings_t settings, cef_point_t inspect_element_at);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:140</i> */
	public interface close_dev_tools_callback extends Callback {
		void apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:141</i> */
	public interface has_dev_tools_callback extends Callback {
		int apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:142</i> */
	public interface get_navigation_entries_callback extends Callback {
		void apply(cef_browser_host_t self, cef_navigation_entry_visitor_t visitor, int current_only);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:143</i> */
	public interface set_mouse_cursor_change_disabled_callback extends Callback {
		void apply(cef_browser_host_t self, int disabled);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:144</i> */
	public interface is_mouse_cursor_change_disabled_callback extends Callback {
		int apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:145</i> */
	public interface replace_misspelling_callback extends Callback {
		void apply(cef_browser_host_t self, cef_string_utf16_t word);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:146</i> */
	public interface add_word_to_dictionary_callback extends Callback {
		void apply(cef_browser_host_t self, cef_string_utf16_t word);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:147</i> */
	public interface is_window_rendering_disabled_callback extends Callback {
		int apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:148</i> */
	public interface was_resized_callback extends Callback {
		void apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:149</i> */
	public interface was_hidden_callback extends Callback {
		void apply(cef_browser_host_t self, int hidden);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:150</i> */
	public interface notify_screen_info_changed_callback extends Callback {
		void apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:151</i> */
	public interface invalidate_callback extends Callback {
		void apply(cef_browser_host_t self, int type);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:152</i> */
	public interface send_key_event_callback extends Callback {
		void apply(cef_browser_host_t self, cef_key_event_t event);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:153</i> */
	public interface send_mouse_click_event_callback extends Callback {
		void apply(cef_browser_host_t self, cef_mouse_event_t event, int type, int mouseUp, int clickCount);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:154</i> */
	public interface send_mouse_move_event_callback extends Callback {
		void apply(cef_browser_host_t self, cef_mouse_event_t event, int mouseLeave);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:155</i> */
	public interface send_mouse_wheel_event_callback extends Callback {
		void apply(cef_browser_host_t self, cef_mouse_event_t event, int deltaX, int deltaY);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:156</i> */
	public interface send_focus_event_callback extends Callback {
		void apply(cef_browser_host_t self, int setFocus);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:157</i> */
	public interface send_capture_lost_event_callback extends Callback {
		void apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:158</i> */
	public interface notify_move_or_resize_started_callback extends Callback {
		void apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:159</i> */
	public interface get_windowless_frame_rate_callback extends Callback {
		int apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:160</i> */
	public interface set_windowless_frame_rate_callback extends Callback {
		void apply(cef_browser_host_t self, int frame_rate);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:161</i> */
	public interface get_nstext_input_context_callback extends Callback {
		Pointer apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:162</i> */
	public interface handle_key_event_before_text_input_client_callback extends Callback {
		void apply(cef_browser_host_t self, MSG keyEvent);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:163</i> */
	public interface handle_key_event_after_text_input_client_callback extends Callback {
		void apply(cef_browser_host_t self, MSG keyEvent);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:164</i> */
	public interface drag_target_drag_enter_callback extends Callback {
		void apply(cef_browser_host_t self, cef_drag_data_t drag_data, cef_mouse_event_t event, int allowed_ops);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:165</i> */
	public interface drag_target_drag_over_callback extends Callback {
		void apply(cef_browser_host_t self, cef_mouse_event_t event, int allowed_ops);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:166</i> */
	public interface drag_target_drag_leave_callback extends Callback {
		void apply(cef_browser_host_t self);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:167</i> */
	public interface drag_target_drop_callback extends Callback {
		void apply(cef_browser_host_t self, cef_mouse_event_t event);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:168</i> */
	public interface drag_source_ended_at_callback extends Callback {
		void apply(cef_browser_host_t self, int x, int y, int op);
	};
	/** <i>native declaration : include\capi\cef_browser_capi.h:169</i> */
	public interface drag_source_system_drag_ended_callback extends Callback {
		void apply(cef_browser_host_t self);
	};
	public cef_browser_host_t() {
		super();
	}
	protected List <String> getFieldOrder() {
		return Arrays.asList("base", "get_browser", "close_browser", "try_close_browser", "set_focus", "has_view", "get_client", "get_request_context", "get_zoom_level", "set_zoom_level", "run_file_dialog", "start_download", "download_image", "print", "print_to_pdf", "find", "stop_finding", "show_dev_tools", "close_dev_tools", "has_dev_tools", "get_navigation_entries", "set_mouse_cursor_change_disabled", "is_mouse_cursor_change_disabled", "replace_misspelling", "add_word_to_dictionary", "is_window_rendering_disabled", "was_resized", "was_hidden", "notify_screen_info_changed", "invalidate", "send_key_event", "send_mouse_click_event", "send_mouse_move_event", "send_mouse_wheel_event", "send_focus_event", "send_capture_lost_event", "notify_move_or_resize_started", "get_windowless_frame_rate", "set_windowless_frame_rate", "get_nstext_input_context", "handle_key_event_before_text_input_client", "handle_key_event_after_text_input_client", "drag_target_drag_enter", "drag_target_drag_over", "drag_target_drag_leave", "drag_target_drop", "drag_source_ended_at", "drag_source_system_drag_ended");
	}
	public cef_browser_host_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends cef_browser_host_t implements Structure.ByReference {
		
	};
	public static class ByValue extends cef_browser_host_t implements Structure.ByValue {
		
	};
}
